/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package MIB;


import java.util.HashMap;
import javax.swing.JOptionPane;
import oru.inf.InfDB;
import oru.inf.InfException;

/**
 *
 * @author adamrosing
 */
public class ValjTypSokAvAlien extends javax.swing.JFrame {

    private InfDB idb;
    private String agentnamn;
    /**
     * Creates new form ValjTypSokAvAlien
     */
    public ValjTypSokAvAlien(InfDB idb) {
        initComponents();
        this.idb = idb;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnSokPlats = new javax.swing.JButton();
        btnSokRas = new javax.swing.JToggleButton();
        btnSokRas1 = new javax.swing.JToggleButton();
        jToggleButton1 = new javax.swing.JToggleButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAlien = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtFepost = new javax.swing.JTextField();
        jLepost = new javax.swing.JLabel();
        btnTillbaka = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Välj hur du vill söka efter Aliens ");

        btnSokPlats.setText("Sök via plats");
        btnSokPlats.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSokPlatsActionPerformed(evt);
            }
        });

        btnSokRas.setText("Sök via ras");

        btnSokRas1.setText("Sök mellan registreringsdatum");

        jToggleButton1.setText("Sök");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        txtAlien.setColumns(20);
        txtAlien.setRows(5);
        jScrollPane1.setViewportView(txtAlien);

        jLabel2.setText("Dessa åtgärder görs via nytt fönster som öppnas");

        jLabel3.setText("Sök efter all information om en alien");

        jLepost.setText("E-post:");

        btnTillbaka.setText("Tillbaka");
        btnTillbaka.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTillbakaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSokPlats, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(btnSokRas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnSokRas1, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 107, Short.MAX_VALUE)
                        .addComponent(jLepost))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnTillbaka, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1)
                    .addComponent(txtFepost))
                .addGap(58, 58, 58))
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(67, 67, 67))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(252, 252, 252))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jToggleButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(68, 68, 68))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 16, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtFepost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLepost))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jToggleButton1)
                        .addGap(9, 9, 9))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(btnSokPlats)
                        .addGap(18, 18, 18)
                        .addComponent(btnSokRas)
                        .addGap(18, 18, 18)
                        .addComponent(btnSokRas1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnTillbaka)
                        .addGap(40, 40, 40))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSokPlatsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSokPlatsActionPerformed
        // TODO add your handling code here:
        new SokAlien(idb).setVisible(true);
        dispose();
    }//GEN-LAST:event_btnSokPlatsActionPerformed

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        
        //tömmer textrutan på tidigare sökning
        txtAlien.setText("");
        String epost = txtFepost.getText();
        
     try{
         //validering att textrutan är ifylld och att den angivna eposten existerar i databasen
         if(Validering.isTxtFilled(epost) && Validering.finnsAnvandareEpostIDB(epost)){
             
             //sqlfraga för at att hämta den nödvändiga infromationen om alien
         String fraga = "SELECT alien.Alien_ID, alien.Registreringsdatum, alien.Namn AS Aliennamn, alien.Telefon, " +
                        "plats.Benamning, agent.Agent_ID, Squid.antal_armar, Boglodite.antal_boogies, Worm.langd " +
                        "FROM Alien " +
                        "JOIN Plats ON alien.Plats = plats.Plats_ID " +
                        "JOIN Agent ON alien.Ansvarig_Agent=agent.Agent_ID " +
                        "LEFT JOIN Squid ON alien.Alien_ID=squid.Alien_ID " +
                        "LEFT JOIN Boglodite ON alien.Alien_ID=boglodite.Alien_ID " +
                        "LEFT JOIN Worm ON alien.Alien_ID=worm.Alien_ID " +
                        "WHERE alien.epost ='"+epost+"'";
         
         //använder InfDB fetchRow för att hämta den raden som frågan returnerar
         //använder fetchRow istället för fetchRows eftersom epost är unik och
         //det ska enbart skapas en rad av frågan
         HashMap<String, String> alienInfo = idb.fetchRow(fraga);
         
         //kontroll att inte mapen är tom
         if(alienInfo != null){
             String alienid = alienInfo.get("Alien_ID");
             String datum = alienInfo.get("Registreringsdatum");
             String aliennamn = alienInfo.get("Namn");
             String telefon = alienInfo.get("Telefon");
             String plats = alienInfo.get("Benamning");
             String agentid = alienInfo.get("Agent_ID");
             String squid = alienInfo.get("Antal_Armar");
             String boglodite = alienInfo.get("Antal_Boogies");
             String worm = alienInfo.get("Langd");
             
             //eftersom fetchRow inte accepterar AS i sql så hämtas agentnamnet
             //separat för blev problem då aliennamnet också hämtades samtidigt
             String fraga2 = "SELECT namn FROM agent WHERE agent_id="+agentid;
             String svar = idb.fetchSingle(fraga2);
             
             if(svar != null){
                 agentnamn = svar;
             }else{
                 agentnamn = "Saknas information";
             }
             
             //visar hämtade informationen i textrutan
             txtAlien.append("ID: "+alienid+"\n");
             txtAlien.append("Namn: "+aliennamn+"\n");
             txtAlien.append("Registreringsdatum: "+datum+"\n");
             txtAlien.append("Telefon: "+telefon+"\n");
             txtAlien.append("Plats: "+plats+"\n");
             txtAlien.append("Ansvarig agent: ID: "+agentid+", Namn: "+agentnamn+"\n");
             
             //kontroll för att avgöra rasen
             //hårdkodat :/ men aja
             if(squid!= null){
                 txtAlien.append("Ras: Squid"+"\n");
                 txtAlien.append("Antal armar: "+squid);
             }else if(boglodite != null){
                 txtAlien.append("Ras: Boglodite"+"\n");
                 txtAlien.append("Antal boogies: "+boglodite);
             }else if(worm != null){
                 txtAlien.append("Ras: Worm"+"\n");
                 txtAlien.append("Längd: "+worm);
             }
             

            
         }
         //tömmer epost rutan för användarvänlighet
         txtFepost.setText("");
         }
          
     }catch(InfException ex){
         JOptionPane.showMessageDialog(null,"Något gick fel");
         System.out.println("Internt felmeddelande: "+ex.getMessage());
     }
    }//GEN-LAST:event_jToggleButton1ActionPerformed

    private void btnTillbakaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTillbakaActionPerformed
        // TODO add your handling code here:
        new AgentFonster(idb).setVisible(true);
        dispose();
    }//GEN-LAST:event_btnTillbakaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSokPlats;
    private javax.swing.JToggleButton btnSokRas;
    private javax.swing.JToggleButton btnSokRas1;
    private javax.swing.JToggleButton btnTillbaka;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLepost;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JTextArea txtAlien;
    private javax.swing.JTextField txtFepost;
    // End of variables declaration//GEN-END:variables
}
